"""
Django settings for ecommerce_api project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from corsheaders.defaults import default_headers, default_methods
import os
from pathlib import Path
from datetime import timedelta
from decouple import config, Csv
import datetime
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', cast=bool)

ALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=lambda v: [
                       s.strip() for s in v.split(',')])

BASE_URL = config('FRONTEND_URL', default='http://127.0.0.1:8000/')

# Application definition
INSTALLED_APPS = [
    'drf_yasg',
    "jazzmin",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    'corsheaders',
    "products",


]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    'corsheaders.middleware.CorsMiddleware',
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]


JAZZMIN_SETTINGS = {
    "site_title": "Advanced DRF API",
    "site_header": "Ecommerce API",
    "site_brand": "Ecommerce API",
    "site_icon": "images/logo.jpg",
    # Add your own branding here
    "site_logo": "images/logo.jpg",
    "welcome_sign": "Welcome to Advanced DRF API Admin Panel",
    # Copyright on the footer
    "copyright": "Smartcomply",
    ############
    # Top Menu #
    ############
}


SWAGGER_SETTINGS = {
    'USE_SESSION_AUTH': True,  # Disable the use of Django session authentication
    'SECURITY_DEFINITIONS': {
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
        }
    },
    'SHOW_REQUEST_HEADERS': True,  # Display an input field for headers in Swagger UI
    'VALIDATOR_URL': None,  # Disable the schema validator URL
    'OPERATIONS_SORTER': 'alpha',  # Sort operations alphabetically in Swagger UI
    # Other settings you might consider adding or modifying
}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # 'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PAGINATION_CLASS': 'utils.pagination_utils.CustomPagination',
    'EXCEPTION_HANDLER': 'utils.response_utils.custom_exception_handler',
}

# Configure Simple JWT with token lifetime and blacklist settings
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': datetime.timedelta(minutes=1440),  # Adjust based on your needs
    'REFRESH_TOKEN_LIFETIME': datetime.timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': True,  # If you want to rotate refresh tokens after use
    'BLACKLIST_AFTER_ROTATION': True,  # Blacklist old refresh tokens after rotation
    'ALGORITHM': 'HS256',
    'SIGNING_KEY':config('SECRET_KEY') , 
    'AUTH_HEADER_TYPES': ('Bearer',),
}


CSRF_COOKIE_SECURE = True
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_ALLOW_ALL = False
CORS_ORIGIN_WHITELIST = [
    'http://localhost:3000',
]

CORS_ALLOW_HEADERS = list(default_headers) + [
    'access-control-allow-origin',
    'x-request-id',
    'authorization',
    'content-type',
]

CORS_ALLOW_METHODS = list(default_methods) + [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]

ROOT_URLCONF = 'ecommerce_api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ecommerce_api.wsgi.application'


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"
TIME_ZONE = 'Africa/Lagos'  # when calculating TAT
USE_I18N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
# Static files (CSS, JavaScript, Images)
STATIC_URL = "/static/"
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]
# Setting the STATIC_ROOT outside BASE_DIR
STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), "static")


# media files configuration
MEDIA_URL = "/media/"
# Setting MEDIA_ROOT outside of the project directory
MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), "media")

# AUTH_USER_MODEL = 'accounts.User'


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
